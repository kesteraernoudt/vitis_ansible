---
sudo: required

services:
  - docker  

before_install:
  # Pull container.
  #- 'docker pull geerlingguy/docker-$distro-ansible:latest'
  - 'docker pull sdarwin/${distro}-ansible:latest'

env:
  #- distro: centos6
  #  init: /sbin/init
  #  run_opts: "--privileged"
  #  playbook: test.yml
  #- distro: trusty  
  #  init: /sbin/init
  #  run_opts: "--privileged"
  #  playbook: test.yml
  - distro=centos7 init=/usr/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=tigervnc playbook=test.yml
  - distro=debian9 init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=tigervnc playbook=test.yml
  - distro=xenial init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=tigervnc playbook=test.yml
  - distro=bionic init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=tigervnc playbook=test.yml
  #- distro=zesty init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=tigervnc playbook=test.yml
  #- distro=artful init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=tigervnc playbook=test.yml
  - distro=centos7 init=/usr/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=tigervnc playbook=test.yml
  - distro=debian9 init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=tigervnc playbook=test.yml
  - distro=xenial init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=tigervnc playbook=test.yml
  - distro=bionic init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=tigervnc playbook=test.yml
  #- distro=zesty init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=tigervnc playbook=test.yml
  #- distro=artful init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=tigervnc playbook=test.yml
  #centos does not support vnc4server
  #- distro=centos7 init=/usr/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" playbook=test.yml
  - distro=debian9 init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=vnc4server playbook=test.yml
  - distro=xenial init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=vnc4server playbook=test.yml
  - distro=bionic init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=vnc4server playbook=test.yml
  #- distro=zesty init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=vnc4server playbook=test.yml
  #- distro=artful init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=gnome vnc_server=vnc4server playbook=test.yml
  - distro=debian9 init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=vnc4server playbook=test.yml
  - distro=xenial init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=vnc4server playbook=test.yml
  - distro=bionic init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=vnc4server playbook=test.yml
  #- distro=zesty init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=vnc4server playbook=test.yml
  #- distro=artful init=/lib/systemd/systemd run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro" vnc_desktop=xfce4 vnc_server=vnc4server playbook=test.yml
script:
  - container_id=$(mktemp)
  # Run container in detached state.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} sdarwin/$distro-ansible:latest "${init}" > "${container_id}"'

  # upgrade pip
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm pip install pip --upgrade'

  # upgrade ansible
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm pip install ansible --upgrade'
  
  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/${playbook} --syntax-check'

  # A prerequisite task to create users
  - 'docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook -e vnc_desktop=${vnc_desktop} -e vnc_server=${vnc_server} /etc/ansible/roles/role_under_test/tests/createusers.yml'
  
  # Test role.
  - printf "starting main exec"
  - 'travis_wait 30 docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 ansible-playbook -vvv -e vnc_desktop=${vnc_desktop} -e vnc_server=${vnc_server} /etc/ansible/roles/role_under_test/tests/${playbook}'
  - printf "finished main exec"

  # Check if vnc is running
  - 'docker exec "$(cat ${container_id})" env TERM=xterm env ANSIBLE_FORCE_COLOR=1 netstat -anptu | grep 5901'

  # Test role idempotence.
  #- idempotence=$(mktemp)
  #- 'sudo docker exec "$(cat ${container_id})" ansible-playbook --extra-vars ''${ansible_vars}'' #/etc/ansible/roles/role_under_test/tests/${playbook} | tee -a ${idempotence}'
  #- >
  #  tail ${idempotence}
  #  | grep -q 'changed=0.*failed=0'
  #  && (echo 'Idempotence test: pass' && exit 0)
  #  || (echo 'Idempotence test: fail' && exit 1)

after_success:
  # Clean up.
  - 'docker stop "$(cat ${container_id})"'

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
